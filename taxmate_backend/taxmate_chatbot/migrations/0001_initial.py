# Generated by Django 4.2.20 on 2025-04-30 07:59

from django.db import migrations, models # type: ignore
import django.db.models.deletion # type: ignore


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Deduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deduction_type', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('max_allowable_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('tax_year', models.IntegerField()),
                ('applicable_to', models.CharField(choices=[('1', 'All income types'), ('2', 'Employment income'), ('3', 'Rental income'), ('4', 'Interest income'), ('5', 'Business income')], default='1', max_length=2)),
                ('special_conditions', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FAQStatic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('answer', models.TextField()),
                ('keywords', models.TextField(help_text='Comma-separated keywords')),
                ('category', models.CharField(max_length=50)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='IncomeSubtype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subtype_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='IncomeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('is_periodic', models.BooleanField(default=True)),
                ('related_deductions', models.TextField(help_text='Comma-separated deduction codes or JSON')),
            ],
        ),
        migrations.CreateModel(
            name='QualifyingPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('max_limit', models.DecimalField(decimal_places=2, max_digits=12)),
                ('tax_year', models.IntegerField()),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'taxmate_chatbot_qualifyingpayment',
            },
        ),
        migrations.CreateModel(
            name='TaxCalendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=200)),
                ('event_description', models.TextField()),
                ('event_date', models.DateField()),
                ('frequency', models.CharField(choices=[('Yearly', 'Yearly'), ('Quarterly', 'Quarterly')], max_length=10)),
                ('target_audience', models.CharField(choices=[('Individual', 'Individual'), ('All', 'All')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='TaxSlab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.CharField(choices=[('Monthly', 'Monthly'), ('Quarterly', 'Quarterly'), ('Annual', 'Annual')], default='Annual', max_length=10)),
                ('income_range_start', models.DecimalField(decimal_places=2, max_digits=12)),
                ('income_range_end', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('tax_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('tax_year', models.IntegerField()),
            ],
            options={
                'ordering': ['income_range_start'],
            },
        ),
        migrations.CreateModel(
            name='TerminalBenefit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('benefit_type', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('exempted_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('max_exempted_amount', models.DecimalField(decimal_places=2, max_digits=12)),
            ],
        ),
        migrations.CreateModel(
            name='UserQuery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('matched_response', models.TextField()),
                ('conversation_id', models.CharField(max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'user_queries',
            },
        ),
        migrations.CreateModel(
            name='TaxRateByType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate_type', models.CharField(choices=[('Fixed', 'Fixed'), ('Slab', 'Slab')], max_length=10)),
                ('tax_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('use_slabs', models.BooleanField(default=False)),
                ('income_subtype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taxmate_chatbot.incomesubtype')),
            ],
        ),
        migrations.AddField(
            model_name='incomesubtype',
            name='income_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taxmate_chatbot.incometype'),
        ),
    ]
